# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

jobs:
  - job: MSVC
    pool:
      vmImage: vs2017-win2016
    steps:
      - script: choco install ninja
        displayName: Install Ninja
      - script: >
          call "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\Tools\\vsdevcmd" -arch=x64 &&
          powershell ./ci.ps1 -ForceMSVC
        displayName: Run tests

  - job: MinGW
    pool:
      vmImage: vs2017-win2016
    steps:
      - script: choco install ninja
        displayName: Install Ninja
      - script: >
          call "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\Tools\\vsdevcmd" -arch=x64 &&
          powershell ./ci.ps1
        displayName: Run tests

  - job: LinuxDocker
    pool:
      vmImage: ubuntu-18.04

    steps:
      - script: |
          wget https://github.com/Kitware/CMake/releases/download/v3.16.1/cmake-3.16.1-Linux-x86_64.sh -nv -O /tmp/cmake.sh
          sudo sh /tmp/cmake.sh --exclude-subdir --prefix=/usr/local
          sudo apt-get install -y python3-venv ninja-build
        displayName: Prepare System
      - script: pwsh ./ci.ps1 -RunDockerTests
        displayName: Run tests

  - job: macOS
    pool:
      vmImage: macos-10.15
    steps:
      - script: |
          curl -Ls https://github.com/ninja-build/ninja/releases/download/v1.8.2/ninja-mac.zip -o ninja-mac.zip
          unzip ninja-mac.zip
          sudo cp -v ninja /usr/local/bin/
        displayName: Prepare System
      - script: env CXX=g++-8 CC=gcc-8 pwsh ./ci.ps1
        displayName: Run tests
